<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 先配置C3P0的连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql:///100test"/>
		<property name="user" value="root"/>
		<property name="password" value="root"/>
	</bean>
	
	<!-- LocalSessionFactoryBean加载配置文件 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 先加载连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 加载方言，加载可选 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		
		<!-- 增加实体配置文件 引入映射的配置文件 -->
		<property name="mappingResources">
			<list>
				<!-- <value></value> -->
				
			</list>
		</property>
	</bean>
	
	<!-- 先配置平台事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 开启事务的注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 配置登录模块 -->
	<bean id="loginAction" class="com.oes.web.action.LoginAction" scope="prototype">
		<property name="studentService" ref="studentService"/>
		<property name="teacherService" ref="teacherService"/>
		<property name="adminService" ref="adminService"/>
	</bean>
	<!-- 配置考试模块 -->
	<bean id="examAction" class="com.oes.web.action.ExamAction" scope="prototype">
		<property name="examService" ref="examService"/>
	</bean>
	
	<!-- 考试业务 -->
	<bean id="examService" class="com.oes.service.impl.ExamServiceImpl">
		<property name="examDao" ref="examDao"/>
	</bean>
	<!-- 考试dao -->
	<bean id="examDao" class="com.oes.dao.impl.ExamDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 配置学生模块 -->
	<bean id="student" class="com.oes.bean.Student">
		
	</bean>
	<!-- 学生业务模块 -->
	<bean id="studentService" class="com.oes.service.impl.StudentServiceImpl">
		<property name="studentDao" ref="studentDao"></property>
	</bean>
	<!-- 老师业务模块 -->
	<bean id="teacherService" class="com.oes.service.impl.TeacherServiceImpl">
		<property name="teacherDao" ref="teacherDao"></property>
	</bean>
	<!-- 管理员业务模块 -->
	<bean id="adminService" class="com.oes.service.impl.AdminServiceImpl">
		<property name="adminDao" ref="adminDao"></property>
	</bean>
	
	
	
	<!-- 配置持久dao层 -->
	<bean id="studentDao" class="com.oes.dao.impl.StudentDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="teacherDao" class="com.oes.dao.impl.TeacherDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="adminDao" class="com.oes.dao.impl.AdminDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
</beans>












